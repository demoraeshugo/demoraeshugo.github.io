{"version":3,"sources":["components/Header/index.jsx","components/Feed/Card/StarButton/index.jsx","components/Feed/Card/TrashButton/index.jsx","components/Feed/Card/Image/index.jsx","components/Feed/Card/Handle/index.jsx","components/Feed/Card/Timestamp/index.jsx","components/Feed/Card/MessageSource/index.jsx","components/Feed/Card/Content/index.jsx","components/Feed/Card/index.jsx","components/Feed/Counter/index.jsx","components/Feed/ToggleView/index.jsx","components/Feed/Search/index.jsx","components/Feed/index.jsx","components/Footer/index.jsx","App.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","Navbar_default","bg","className","Brand","href","src","alt","Component","StarButton","Button_default","onClick","this","props","handleStarClick","variant","size","starText","TrashButton","handleTrashClick","trashText","Image","_ref","source","concat","Handle","Timestap","Source","Content","Card","key","id","Container_default","Row_default","Col_default","sm","Card_Image","index","Feed_Card_Handle","lg","MessageSource","Timestamp","Card_Content","Card_StarButton","Object","assign","Feed_Card_TrashButton","Counter","setCounter","block","Badge_default","count","ToggleView","handleToggleClick","toggleViewText","Search","Form_default","Group","Control","placeholder","disabled","type","Feed","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","initializeButtonState","initializeCardState","buttonState","i","messages","length","obj","isStarred","push","setState","cardState","isTrashed","state","map","current","objectSpread","forEach","element","assertThisInitialized","toggleTrashedView","_this2","components_Feed_Card","_this3","_this4","Feed_Counter","components_Feed_ToggleView","components_Feed_Search","buildTrashedCards","buildVisibleCards","Footer","App","components_Header","src_components_Feed","src_components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef72d522.chunk.js","sourcesContent":["//React\nimport React, { Component } from \"react\";\n\n//Styles\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n//Components\nimport Navbar from \"react-bootstrap/Navbar\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <>\n        <Navbar bg=\"light\" className=\"border-bottom\">\n          <Navbar.Brand href=\"#home\">\n            <img\n              src=\"/images/assets_logo-sf-small.png\"\n              className=\"d-inline-block align-top\"\n              alt=\"logo-sf-small\"\n            />\n          </Navbar.Brand>\n          <span className=\"text-muted ml-auto\">MESSAGE VIEWER</span>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","//React\nimport React, { Component } from 'react';\n\n//Styles\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//Components\nimport Button from 'react-bootstrap/Button';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faStar } from '@fortawesome/free-regular-svg-icons'\n\nclass StarButton extends Component {\n  render() {\n    return <>\n      <Button \n            onClick={this.props.handleStarClick}\n            variant={this.props.variant}\n            size=\"sm\">\n            {this.props.starText}\n      </Button>\n    </>;\n  }\n}\nexport default StarButton;","//React\nimport React, { Component } from 'react';\n\n//Styles\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\n//Components\nimport Button from 'react-bootstrap/Button';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faStar } from '@fortawesome/free-regular-svg-icons'\n\nclass TrashButton extends Component {\n  render() {\n    return <>\n      <Button \n        variant=\"light\"\n        size=\"sm\"\n        className=\"trashButton\"\n        onClick={this.props.handleTrashClick}>\n        {this.props.trashText}\n      </Button>\n    </>;\n  }\n}\nexport default TrashButton;","//React\nimport React from \"react\";\n\nconst Image = ({ source }) => (\n  <img src={`${source}`} alt=\"avatar\"/>\n);\n\nexport default Image;","//React\nimport React from \"react\";\n\n//Styles\nimport \"./index.css\";\n\nconst Handle = ({ source }) => (\n        <p className=\"handle\">@{`${source}`}</p>\n);\n\nexport default Handle;","//React\nimport React from \"react\";\n\nconst Timestap = ({ source }) => (\n    <span>{`${source}`}</span>\n);\n\nexport default Timestap;","//React\nimport React from \"react\";\n\nconst Source = ({ source }) => (\n    <span>{`${source}`}</span>\n);\n\nexport default Source;","//React\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst Content = ({ source }) => (\n    <p>{`${source}`}</p>\n);\nexport default Content;","//React\nimport React, { Component } from \"react\";\n\n//Styles\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n//Components\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport StarButton from \"./StarButton/index\";\nimport TrashButton from \"./TrashButton/index\";\nimport Image from \"./Image/index\";\nimport Handle from \"./Handle/index\";\nimport Timestamp from \"./Timestamp/index\";\nimport Source from \"./MessageSource/index\";\nimport Content from \"./Content/index\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <>\n          <span key={\"span\" + this.props.id}>\n            <Container className=\"card shadow-sm\">\n              <Row>\n                <Col sm=\"auto\">\n                  <div className=\"text-center\">\n                    {\n                      <Image\n                        source={this.props.index[\"avatar\"]}\n                        key={\"avatar\" + this.props.id}\n                      />\n                    }\n                    {\n                      <Handle\n                        source={this.props.index[\"handle\"]}\n                        key={\"handle\" + this.props.id}\n                      />\n                    }\n                  </div>\n                </Col>\n                <Col lg>\n                  <div className=\"text-muted source\">\n                    {\n                      <Source\n                        source={this.props.index[\"source\"]}\n                        key={\"source\" + this.props.id}\n                      />\n                    }\n                    <span> | </span>\n                    {\n                      <Timestamp\n                        source={this.props.index[\"timestamp\"]}\n                        key={\"timestamp\" + this.props.id}\n                      />\n                    }\n                  </div>\n                  {\n                    <Content\n                      source={this.props.index[\"content\"]}\n                      key={\"content\" + this.props.id}\n                    />\n                  }\n                </Col>\n                <Col sm=\"auto\">\n                  {\n                    <StarButton\n                      key={\"button\" + this.props.id}\n                      {...this.props}\n                    />\n                  }\n                  {\n                    <TrashButton\n                      key={\"trash\" + this.props.id}\n                      {...this.props}\n                    />\n                  }\n                </Col>\n              </Row>\n            </Container>\n          </span>\n      </>\n    );\n  }\n}\nexport default Card;\n","//React\nimport React, { Component } from 'react';\n\n//Styles\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//Components\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Counter extends Component {\n  componentDidMount() {\n      this.props.setCounter();\n    }\n\n  render () {\n    return <>\n    <Button \n      variant=\"warning\" \n      size=\"sm\" \n      block\n      className=\"text-white\">Starred: <Badge variant=\"light\">{this.props.count}</Badge>\n    </Button>\n  </>;\n  }\n}\nexport default Counter;\n\n","//React\nimport React, { Component } from 'react';\n\n//Styles\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\n//Components\nimport Button from 'react-bootstrap/Button';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faStar } from '@fortawesome/free-regular-svg-icons'\n\nclass ToggleView extends Component {\n  render() {\n    return <>\n      <Button \n        className=\"toggleView\"\n        variant=\"light\"\n        size=\"sm\"\n        block\n        //className=\"toggleView\"\n        onClick={this.props.handleToggleClick}>\n        {this.props.toggleViewText}\n      </Button>\n    </>;\n  }\n}\nexport default ToggleView;","//React\nimport React, { Component } from 'react';\n\n//Styles\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\n//Components\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\n\n\n//Notes: In order to update \"Counter\" on button click, \"Feed\" must hold all the required data and pass down to each relevant component\nclass Search extends Component {\n\n    render () {\n        return <>\n            <Form>\n                <Row>\n                    <Col>\n                        <Form.Group>\n                            <Form.Control block size=\"sm\" placeholder=\"Search\" id=\"inputText\" disabled/>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Button size=\"sm\" variant=\"outline-warning\" type=\"submit\" className=\"moveUp\" disabled >\n                            Submit\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n\n        </>\n    }\n\n}\nexport default Search;","//React\nimport React, { Component } from \"react\";\n\n//JSON\nimport { messages } from \"./messages.json\";\n\n//Styles\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\n//Components\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"./Card/index\";\nimport Counter from \"./Counter/index\";\nimport ToggleView from \"./ToggleView/index\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Search from \"./Search/index\";\n\n//Notes: In order to update \"Counter\" on button click, \"Feed\" must hold all the required data\n//and pass down to each relevant component\nclass Feed extends Component {\n  constructor() {\n    super();\n    this.state = {\n      buttonState: [],\n      cardState: [],\n      //Define count (value is arbritray as \"Component did mount\" will check \"buttonState\" in case any value is set to true by default)\n      count: 0,\n      toggleTrashedView: false\n    };\n  }\n\n  //Calls functions to initialize arrays and set state prior to rendering to DOM\n  componentWillMount = () => {\n    this.initializeButtonState();\n    this.initializeCardState();\n  };\n\n  //Initialize an array of object containing state's pulled from JSON \"isStarred\", NOTE: set to \"false\" by default\n  initializeButtonState = () => {\n    var buttonState = [];\n    for (var i = 0; i < messages.length; i++) {\n      var obj = { id: i, isStarred: false };\n      buttonState.push(obj);\n    }\n    this.setState({\n      buttonState: buttonState\n    });\n  };\n\n  //Initialize an array of object containing state's pulled from JSON \"isTrashed\", NOTE: set to \"false\" by default\n  initializeCardState = () => {\n    var cardState = [];\n    for (var i = 0; i < messages.length; i++) {\n      var obj = { id: i, isTrashed: false };\n      cardState.push(obj);\n    }\n    this.setState({\n      cardState: cardState\n    });\n  };\n\n  //What to do once a button is toggled.  Receives index from child, maps \"buttonState\" and compares \"id\" with \"index\",\n  //once found, changes value at matching location and sets state to that new array\n  //IMORTANT!!! : \"setCounter()\" is callback to ensure counter is updated immediently => \"SetState is async\"\n  handleStarClick = index => {\n    this.setState(\n      state => {\n        const buttonState = state.buttonState.map(current => {\n          if (current.id === index) {\n            return { ...current, isStarred: !current.isStarred };\n          } else {\n            return { ...current, isStarred: current.isStarred };\n          }\n        });\n        return {\n          buttonState\n        };\n      },\n      () => this.setCounter()\n    );\n  };\n\n  //Updates Counter.  Steps through \"buttonState\" and increments \"count\" value by 1 for each button who's \"isStarred\"\n  // state is true\n  setCounter = () => {\n    var count = 0;\n    this.state.buttonState.forEach(function(element) {\n      if (element.isStarred === true) {\n        count++;\n      } else {\n        return;\n      }\n    }, this);\n    this.setState({\n      count: count\n    });\n  };\n\n  //Receives index from child element, finds matching index in \"cardState\" array,\n  //updates bolean value and sets state equal to new array\n  handleTrashClick = index => {\n    this.setState(state => {\n      const cardState = state.cardState.map(current => {\n        if (current.id === index) {\n          return { ...current, isTrashed: !current.isTrashed };\n        } else {\n          return current;\n        }\n      });\n      return {\n        cardState\n      };\n    });\n\n    //Assuming that a \"trashed\" card can't also be \"starred,\" checks if trashed card is also starred\n    //and sets value to false, if this not the case then simply removing this block will make is so\n    //\"trashing\" a card has no affect on it's \"isStarred\" property\n    this.setState(\n      state => {\n        const buttonState = state.buttonState.map(current => {\n          if (current.id === index) {\n            return { ...current, isStarred: false };\n          } else {\n            return current;\n          }\n        });\n        return {\n          buttonState\n        };\n      },\n      () => this.setCounter()\n    );\n  };\n\n  //Changes state, caused render of only trashed cards\n  handleToggleClick = () => {\n    this.setState({\n      toggleTrashedView: !this.state.toggleTrashedView\n    });\n  };\n\n  //Builds only cards who's \"isTrashed\" value = \"false\"\n  buildVisibleCards() {\n    var visibleCards = messages.map((current, index) => (\n      <>\n        {!this.state.cardState[index].isTrashed && (\n          <Card\n            //To be passed to \"Card\" child\n            key={current.id}\n            id={current.id}\n            index={current}\n            //To be passed to \"StarButton\" grandchild\n            handleStarClick={() => this.handleStarClick(index)}\n            variant={\n              this.state.buttonState[index].isStarred\n                ? \"warning\"\n                : \"outline-warning\"\n            }\n            starText={\n              this.state.buttonState[index].isStarred\n                ? \"Starred!\"\n                : \"Star Message!\"\n            }\n            //To be passed to \"TrashButton\" grandchild\n            handleTrashClick={() => this.handleTrashClick(index)}\n            trashText={\"Trash Message!\"}\n          />\n        )}\n      </>\n    ));\n    return visibleCards;\n  }\n\n  //Builds only cards who's \"isTrashed\" value = \"true\"\n  buildTrashedCards() {\n    var trashedCards = messages.map((current, index) => (\n      <>\n        {this.state.cardState[index].isTrashed && (\n          <Card\n            //To be passed to \"Card\" child\n            key={current.id}\n            id={current.id}\n            index={current}\n            //To be passed to \"StarButton\" grandchild\n            handleStarClick={() => this.handleStarClick(index)}\n            variant={\n              this.state.buttonState[index].isStarred\n                ? \"warning\"\n                : \"outline-warning\"\n            }\n            starText={\n              this.state.buttonState[index].isStarred\n                ? \"Starred!\"\n                : \"Star Message!\"\n            }\n            //To be passed to \"TrashButton\" grandchild\n            handleTrashClick={() => this.handleTrashClick(index)}\n            trashText={\"Remove from trash\"}\n          />\n        )}\n      </>\n    ));\n    return trashedCards;\n  }\n\n  render() {\n    //this.initializeButtonState();\n    return (\n      <>\n        <div>\n          <Container className=\"whiteBackground padding\">\n            <Container className=\"counter\">\n              <Row>\n                <Col sm=\"2.5\">\n                  <Counter\n                    count={this.state.count}\n                    setCounter={() => this.setCounter()}\n                  />\n                  <ToggleView\n                    handleToggleClick={() => this.handleToggleClick()}\n                    toggleViewText={\n                      this.state.toggleTrashedView\n                        ? \"Show Untrashed Messages\"\n                        : \"Show Trashed Messages\"\n                    }\n                  />\n                </Col>\n                <Col sm=\"6\" className=\"dropDown\">\n                  <Search />\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <>\n                {this.state.toggleTrashedView //toggleTrashedView acts as a bolean switch deciding which cards to render\n                  ? this.buildTrashedCards()\n                  : this.buildVisibleCards()}\n              </>\n            </Container>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\nexport default Feed;\n","//React\nimport React, { Component } from \"react\";\n\n//Styles\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <>\n        <footer className=\"footer\">\n          <div className=\"container\">\n            <span className=\"text-muted\">\n              Created by Hugo De Moraes for Signafire Technologies 2019\n            </span>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Footer;\n","//React\nimport React, { Component } from 'react';\n\n//Styles\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//Components\nimport Header from './components/Header/index';\nimport Feed from './components/Feed/index';\nimport Footer from './components/Footer/index';\n\nclass App extends Component {\n    render () {\n        return <>\n            <Header/>\n            <Feed/>\n            <Footer/>\n        </>\n    }\n}\nexport default App;","//React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Styles\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//Components\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}